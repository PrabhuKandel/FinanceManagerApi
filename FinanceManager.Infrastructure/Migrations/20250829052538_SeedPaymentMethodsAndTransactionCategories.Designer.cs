// <auto-generated />
using System;
using FinanceManager.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinanceManager.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250829052538_SeedPaymentMethodsAndTransactionCategories")]
    partial class SeedPaymentMethodsAndTransactionCategories
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinanceManager.Domain.Models.PaymentMethod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentMethods");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bb55349d-b1db-4b61-bfea-a6189e2290c2"),
                            Description = "Cash payment",
                            IsActive = true,
                            Name = "Cash"
                        },
                        new
                        {
                            Id = new Guid("dfb8a715-d07f-47a0-b9bd-2fd00c00d0d6"),
                            Description = "Payment via credit card",
                            IsActive = true,
                            Name = "Credit Card"
                        },
                        new
                        {
                            Id = new Guid("f0a1537d-2cbf-4f26-9e31-4e41dc3c4803"),
                            Description = "Payment via bank transfer",
                            IsActive = true,
                            Name = "Bank Transfer"
                        },
                        new
                        {
                            Id = new Guid("85ff7a2d-f256-450f-8984-30d3fa36712d"),
                            Description = "Unified Payment Interface",
                            IsActive = true,
                            Name = "UPI"
                        },
                        new
                        {
                            Id = new Guid("ed6a319b-f5f4-4a7c-a7e1-587b776c6a45"),
                            Description = "Online PayPal payment",
                            IsActive = true,
                            Name = "PayPal"
                        });
                });

            modelBuilder.Entity("FinanceManager.Domain.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PaymentMethodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TransactionCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PaymentMethodId");

                    b.HasIndex("TransactionCategoryId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("FinanceManager.Domain.Models.TransactionCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("TransactionCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4b8210ae-4815-4054-b760-8c2771ee5c82"),
                            Description = "Monthly income from job",
                            Name = "Salary",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("87e91a20-01df-4dda-847f-9ac65894bcb1"),
                            Description = "Freelance or side income",
                            Name = "Freelance",
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("7df6f99a-9fb9-4ad6-9f37-ca3074593d78"),
                            Description = "Groceries and dining out",
                            Name = "Food",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("bc5569ef-65fd-4e4d-bfbb-54c316a9a75e"),
                            Description = "Bus, train, fuel, ride shares",
                            Name = "Transport",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("a269d60f-f8e7-4416-af71-9ab97f2a468a"),
                            Description = "Movies, games, hobbies",
                            Name = "Entertainment",
                            Type = 1
                        });
                });

            modelBuilder.Entity("FinanceManager.Domain.Models.Transaction", b =>
                {
                    b.HasOne("FinanceManager.Domain.Models.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceManager.Domain.Models.TransactionCategory", "TransactionCategory")
                        .WithMany()
                        .HasForeignKey("TransactionCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentMethod");

                    b.Navigation("TransactionCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
